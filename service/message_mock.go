// Automatically generated by MockGen. DO NOT EDIT!
// Source: message.go

package service

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/sambaiz/go-api-with-test/model"
)

// Mock of Message interface
type MockMessage struct {
	ctrl     *gomock.Controller
	recorder *_MockMessageRecorder
}

// Recorder for MockMessage (not exported)
type _MockMessageRecorder struct {
	mock *MockMessage
}

func NewMockMessage(ctrl *gomock.Controller) *MockMessage {
	mock := &MockMessage{ctrl: ctrl}
	mock.recorder = &_MockMessageRecorder{mock}
	return mock
}

func (_m *MockMessage) EXPECT() *_MockMessageRecorder {
	return _m.recorder
}

func (_m *MockMessage) GetMessages(limit uint64, offset uint64) ([]model.Message, error) {
	ret := _m.ctrl.Call(_m, "GetMessages", limit, offset)
	ret0, _ := ret[0].([]model.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockMessageRecorder) GetMessages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMessages", arg0, arg1)
}

func (_m *MockMessage) CreateMessage(content string) (*model.Message, error) {
	ret := _m.ctrl.Call(_m, "CreateMessage", content)
	ret0, _ := ret[0].(*model.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockMessageRecorder) CreateMessage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateMessage", arg0)
}
