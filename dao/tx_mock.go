// Automatically generated by MockGen. DO NOT EDIT!
// Source: tx.go

package dao

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Tx interface
type MockTx struct {
	ctrl     *gomock.Controller
	recorder *_MockTxRecorder
}

// Recorder for MockTx (not exported)
type _MockTxRecorder struct {
	mock *MockTx
}

func NewMockTx(ctrl *gomock.Controller) *MockTx {
	mock := &MockTx{ctrl: ctrl}
	mock.recorder = &_MockTxRecorder{mock}
	return mock
}

func (_m *MockTx) EXPECT() *_MockTxRecorder {
	return _m.recorder
}

func (_m *MockTx) Begin() error {
	ret := _m.ctrl.Call(_m, "Begin")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTxRecorder) Begin() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Begin")
}

func (_m *MockTx) Commit() error {
	ret := _m.ctrl.Call(_m, "Commit")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTxRecorder) Commit() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Commit")
}

func (_m *MockTx) RollbackUnlessCommitted() {
	_m.ctrl.Call(_m, "RollbackUnlessCommitted")
}

func (_mr *_MockTxRecorder) RollbackUnlessCommitted() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RollbackUnlessCommitted")
}
